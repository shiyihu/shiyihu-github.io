<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Markdown语法与练习（二）]]></title>
      <url>%2F2017%2F03%2F11%2FMarkdown%E8%AF%AD%E6%B3%95%E4%B8%8E%E7%BB%83%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89%2F</url>
      <content type="text"><![CDATA[本来这篇是想写关于Markdown中插入数学公式的一些内容的，但随之发现有一点坑，在MarkdownPad2中我习惯性的按照LaTeX的语法开始写公式，发现并不能解析，然后上网查找，发现需要在md文件中添加下面这段就可以了： 12&lt;script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"&gt;&lt;/script&gt; 当然其实最好是永久的设置，是在MarkdownPad2中工具-选项-高级-HTML编辑器中加入上面那段话，然后保存就可以了，但要想在博客中显示出来，还需要一个工作。 在博客的根目录下，打开git bash,输入 1npm install hexo-math --save 之后再站点配置文件_config.yml添加plungins: hexo-math就可以了，存在的一个问题是在MarkdownPad2中并不能实时预览公式的渲染，需要按F6在浏览器中预览时才能看到数学公式，有点嫌麻烦，于是我开始寻找其他的Markdown编辑器。 先尝试了知乎网友自己写的一个MarkDownEditor,这款编辑器支持直接写数学公式，而且像很多编辑器一样分屏预览，可以比较容易的输出PDF、HTML等各种格式，免费开源，各种功能也很全，但个人觉得主要是界面不是很好看，总体还是不错的，喜欢的可以使用。 后面又尝试了一下Typora,这完全是另一种风格，不再分屏显示，将写字和预览结合在一起了，感觉又像拥有了Word那种即写即见的特点，而且很多小功能也做得不错，比如图片可以直接拖进来插入，还是比较方便的，这里在补充一句，在Markdown中直接插入图片关于大小很难控制，但可以通过HTML的img标签来控制大小，如下： 1&lt;img src="https://github.com/shiyihu/my-file/raw/master/images/avatar.png" alt="logo3" height="200" width="200" /&gt; 这是在test article and some tips中我插入的第三张小图，所以还是用Markdown来做纯文字工作比较好，太复杂倒失去了本意，于是我开始转而使用Typora了。再附上别人写的一些使用的说明，如Typora For Markdown 语法,还有安利一下Typora：极致简洁的markdown编辑器,根本原则还是多用。 所以之后发现不太想写关于数学公式的插入了，因为各个编辑器略有不同，但数学公式的插入其实基本按照LaTeX那一套语法来的，需要用的自然会去学，所以Markdown系列暂时就到这里了，写的随意，最后附上自认为比较好的进阶教程Markdown - 简单的世界,可以再学学Markdown的其他tips.]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Markdown 语法和练习（一）]]></title>
      <url>%2F2017%2F03%2F04%2FMarkdown-%E8%AF%AD%E6%B3%95%E5%92%8C%E7%BB%83%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
      <content type="text"><![CDATA[Markdown简介Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。 Markdown 的目标是实现「易读易写」，因此Markdown的使用应该是自然的，让我们在写作时专注于内容，不需额外考虑格式，因此在一定程度上和LaTeX很像，其实Markdown文件也可以比较容易的转换为LaTeX或HTML。 Markdownd的语法教程网上很多，Markdown 语法说明应该是比较全面的官方文档了，可对于初步使用其实并不需要知道那么多，作为一门工具我们可以在了解初步语法之后边用边学，这也是本文的目的。另外，我还将结合Hexo博客的写作来写。另外，在此声明一下本文使用的编辑器是MarkdownPad2，发现不同的编辑器可能语法有一些不一样，但也大同小异。 段落自然的，一行文字就会形成一段话，如果你要开始新的一段，需要多空一行，这和LaTeX是一致的。 标题Markdown中通过 # 号来指明标题内容，共有六级标题，用不同个数的#号来表示，一个最大，是一级标题，六个最小，需要注意的是#号和标题内容之间要有一个空格，下面做一些展示 # 一级标题 ### 三级标题 ###### 六级标题 另外需要注意的是在写hexo博客中，写的标题会自动生成目录，如果你设置了展示的话，在阅读时会显示在页面两侧。 列表Markdown中列表有两种，一种是无编号的用 *，+或者-表示，有序的用一个数字加一个英文句点表示，同样的，这都需要在新起的一行的开头，和具体内容之间要有一个空格，如下 * 1-- * 2-- * 3-- 的效果是 1– 2– 3– +和-是一样的，不再重复。而对于有序的列表，如下 1. 1-- 2. 2-- 3. 3-- 它的效果是 1– 2– 3– 代码插入代码插入有两种，一种是内联的短代码，用反引号` 来标记内联代码，比如它们会解释成&lt;code&gt;标签。如果代码的内容中有反引号，请用两个反引号包裹。代码中的&amp;、&lt;、&gt;符号都会自动转义，请放心使用 另一种是代码块，通过在句首用制表符或者四个空格来指示，上面讲列表的时候就是这样做的，如果是在列表中要插入代码块，则需要使用两个制表符或者八个空格，这在插入代码时比较有用。 下面举个例子，内联代码如python,a+b,代码块如 这是一个代码块 引用通过在行首加上大于号&gt;来添加引用格式 This is a blockquote 引用是可以嵌套的,在引用中加两个大于号&gt;&gt;就可以了 There are two blockquotes; this is the first this is the second end 粗体、斜体可以用星号 * 或下划线 _ 指定粗体或者斜体 *这是斜体* _这也是斜体_ **这是粗体** ***这是粗体+斜体*** 上面是写在代码块中的，不会被解释，写在文本中的效果如下 这是斜体 这也是斜体 这是粗体 这是粗体+斜体 分割线可以用---或者***来给文本添上分割线，单独在一行即可： 链接、图片可以用[拾忆的杂货屋](https://shiyihu.github.io/)来添加链接，如下： 拾忆的杂货屋 至于图片，在MarkdownPad2中比较复杂，特别是想要部署到hexo博客中去，但一般的插入语法是 ![](图片链接地址),[]中可以填也可以不填。下面说说怎么在hexo博客中插入图片。 最简单的方法是将图片上传至网络上的图片云服务器生成图片链接，比如七牛之类，然后把图片链接填入即可，网上有很多这个教程，我嫌麻烦，没有使用过这种方法； 另一种是需要做一些配置，然后就可以节约上传图片这一步了，具体如下： 先更改站点文件_config.yml中post_asset_folder的值为true,即post_asset_folder:true; 在hexo的目录下执行npm install https://github.com/CodeFalling/hexo-asset-image --save 之后再用hexo新建文章时就会在_post目录下新建一个与文章同名的文件夹，可以把与该文章相关的所有资源都放到那个文件夹，这样便可以更方便的使用资源。 将图片文件放回去之后，就可以把插入图片时需要填写的图片链接地址改为该图片的相对位置，比如我在另一篇文章test article and some tips中要插入图片的语法是![logo](test-article-and-some-tips/avatar.png ) 还有另一种方法是将图片上传至GitHub（最好新建一个库放置这些乱七八糟的东西），然后链接填其网址，这其实和第一种方法差不多，但我还是更偏爱这种。 上传文件说到插入图片，我突然想到了上传文件这事，偶尔还是有需要的，然后尝试了第一种方法，如上面将图片传至GitHub相应库一样，将文件上传之后像添加网址一样，如lake model（这个文件只是我用来做实验的），突发奇想，能不能把文件放在本地呢，也试试lake model。确实是可以的，把文件放在\blog\source\uploads中，然后引用其相对路径，比如 [lake model](\uploads\Lec18.pdf) 这样就插入了那个文件，但我猜测放在这里面的话会影响部署hexo时的加载速度（并不是很清楚），所以还是用上传至GitHub那种方法吧。 End这篇文章就到此结束了，瞎折腾还是比较好玩，既可以熟悉又可以学到新的技能，上面那个上传文件的方法其实试了挺久，自己胡乱想到的，还是比较好玩，欢迎共同学习。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[test article and some tips]]></title>
      <url>%2F2017%2F03%2F04%2Ftest-article-and-some-tips%2F</url>
      <content type="text"><![CDATA[在参考知乎的教程初步搭建好博客后，这篇文章主要是一些测试工作和我觉得在使用过程中有必要知道的一些tips. 首先是更改站点的头像，参考github上的这篇文章，我的做法是先编辑站点的_config.yml, 新增字段avatar,值设置为头像的链接地址，我选择的是站点内的地址，在站点的source文件夹下新建uploads目录,然后把头像放置在站点source/uploads下，那么地址也就为/uploads/avatar.png了（avatar.png是你头像文件的文件名）。 发现next主题使用文档和Hexo的Next主题配置中有绝大多数需要的信息，可以按照上面的配置来，不再多说。 还一个要解决的问题是插图的问题，先来试试能否成功插图 看上去还是不错! 再试另一种插图方式，直接通过网址插入 再试一种，,这个通过img标签插入可以调节大小，比较方便，但终究Markdown是一款文字处理软件，对图片插入还不是特别友好 试试文件的下载，lake model，还可以。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[My first article]]></title>
      <url>%2F2017%2F03%2F02%2FMy-first-article%2F</url>
      <content type="text"><![CDATA[许久之后又开始搭建自己的博客了。希望这次一切都好。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2017%2F03%2F02%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
